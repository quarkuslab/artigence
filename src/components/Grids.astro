---
const COLORS = [' #d3d3d3'];
const ROWS = 3;
const BOXES_PER_ROW = 3;

function getRandomInt(min, max) {
  return Math.floor(Math.random() * (max - min)) + min;
}
---
<div class="app">
    <div class="box-list">
      {Array.from({ length: ROWS }).map((_, i) => (
        <div 
          class="loop-slider" 
          style={`--duration: ${getRandomInt(10000, 20000)}ms; --direction: ${i % 2 === 0 ? 'normal' : 'reverse'}`}
        >
          <div class="inner">
            {Array.from({ length: BOXES_PER_ROW * 2 }).map(() => (
              <div class="box" style={`background-color: ${COLORS[getRandomInt(0, COLORS.length)]}`}></div>
            ))}
            {/* Duplicate for seamless scroll */}
            {Array.from({ length: BOXES_PER_ROW * 2 }).map(() => (
              <div class="box" style={`background-color: ${COLORS[getRandomInt(0, COLORS.length)]}`}></div>
            ))}
          </div>
        </div>
      ))}
      <div class="fade"></div>
    </div>
  </div>
  
  <style>

  
    .app {
        margin-top: 100px;
      min-width: 50%;
      display: flex;
      align-items: center;
      justify-content: center;
      flex-direction: column;
      background-color: #ffffff;
    }
  
    .box-list {
      width: 70%;
      max-width: 100%;
      display: flex;
      flex-direction: column;
      gap: 1rem 0;
      position: relative;
      padding: 2rem 0;
      overflow: hidden;
      background-color: #ffffff;
    }
  
    .loop-slider {
      display: flex;
      overflow: hidden;
    }
  
    .loop-slider .inner {
      display: flex;
      width: fit-content;
      animation: loop var(--duration) linear infinite;
      animation-direction: var(--direction);
    }
  
    .box {
      width: 15rem;
      height: 15rem;
      border-radius: 0.4rem;
      margin-right: 1.5rem;
      
    }
  
    .fade {
      pointer-events: none;
      background: linear-gradient(90deg, #ffffff, transparent 30%, transparent 70%, #ffffff);
      position: absolute;
      inset: 0;
    }
  
    @keyframes loop {
      0% {
        transform: translateX(0);
      }
      100% {
        transform: translateX(-50%);
      }
    }
  </style>
  
